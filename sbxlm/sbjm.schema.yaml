# Rime schema
# encoding: utf-8

__include: sbxlm.yaml:/prelude

schema:
  schema_id: sbjm
  name: "声笔简码"
  version: "11.0"
  icon: "sbxlm.ico"
  author:
    - 戴石麟 <https://sbxlm.github.io>
    - 蓝落萧 <https://tansongchen.com>
  dependencies:
    - sbyp
    - bihua
    - zhlf
    - sbjm2

switches:
  - name: ascii_mode
    reset: 0
    states: [中文, 西文]
  - name: ascii_punct
    reset: 0
    states: [。，, ．，]
  - name: zh_trad
    reset: 0
    states: [简体, 繁体]
  - name: third_pop
    reset: 0
    states: [四顶, 三顶]
  - name: is_enhanced
    reset: 0
    states: [常规, 增强]
  - options: [hide, rational, irrational, both]
    reset: 1
    states: [隐藏, 有理, 无理, 两者]
  # 希望在同文里用下三角来隐藏键盘的可去掉下面两行的注释
  #- options: [_key_Hide]
  #  states: ["▼"]
  # 为了避免拥挤，不显示下面的状态
  - name: auto_inline
    reset: 1
  - name: is_buffered
    reset: 0
  - name: single_display
    reset: 0
  - name: enhanced_char
    reset: 0
  - name: delayed_pop
    reset: 0
  - name: show_es
    reset: 1
  # 不要改变下面的状态，以免穿帮
  - name: fast_pop
    reset: 0
  - name: pro_char
    reset: 0

engine:
  processors:
    - lua_processor@*sbxlm.ascii_composer
    - ascii_composer
    - recognizer
    - lua_processor@*sbxlm.key_binder
    - key_binder
    - lua_processor@*sbxlm.selector
    - lua_processor@*sbxlm.popping
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@sbzdy
    - affix_segmentor@bihua
    - affix_segmentor@sbyp
    - affix_segmentor@emoji
    - affix_segmentor@zhlf
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - lua_translator@*sbxlm.auto_length
    - table_translator@bihua
    - script_translator@sbyp
    - script_translator@emoji
    - script_translator@zhlf
    - lua_translator@*sbxlm.utils.datetime
    - lua_translator@*sbxlm.utils.number
    - lua_translator@*sbxlm.utils.calculator
    - table_translator@sbzdy
    - history_translator
  filters:
    - simplifier@es_conversion
    - lua_filter@*sbxlm.hint
    - reverse_lookup_filter@reverse_lookup
    - lua_filter@*sbxlm.select_key_to_comment
    - simplifier
    - uniquifier

popping:
  __append:
    - when: delayed_pop
      match: "[bpmfdtnlgkhjqxzcsrywv]{4}"
      accept: "[a-z]"
      prefix: 3
    - when: delayed_pop
      match: "[bpmfdtnlgkhjqxzcsrywv]{3}"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
      strategy: append
    - match: "[bpmfdtnlgkhjqxzcsrywv].*[aeiou]"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    - match: "[bpmfdtnlgkhjqxzcsrywv]{4}"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    - when: "third_pop"
      match: "[bpmfdtnlgkhjqxzcsrywv]{3}"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    - when: "is_enhanced"
      match: "[bpmfdtnlgkhjqxzcsrywv][a-z][bpmfdtnlgkhjqxzcsrywv][a-z]"
      accept: "[0-9]"
      prefix: 2
    - when: is_enhanced
      match: "[bpmfdtnlgkhjqxzcsrywv]{3}"
      accept: "[0-9]"
      prefix: 1
    - match: "([bpmfdtnlgkhjqxzcsrywv][a-z]){2}"
      accept: "[aeiou]"
      prefix: 2
      strategy: conditional
    # 大写字母输入多字词
    - when: third_pop
      match: "[bpmfdtnlgkhjqxzcsrywv]{3}"
      accept: "[BPMFDTNLGKHJQXZCSRYWV]"
      strategy: append

speller:
  alphabet: "bpmfdtnlgkhjqxzcsrywvaeiou0123456789;'BPMFDTNLGKHJQXZCSRYWV"
  initials: "bpmfdtnlgkhjqxzcsrywv"
  auto_clear: none
  max_code_length: 6
  popping:
    __patch:
      - /popping
      - sbxlm.yaml:/table_popping
      - sbxlm.yaml:/basic_popping

translator:
  dictionary: sbjm
  enable_user_dict: true
  enable_filtering: false #sss时过滤掉多字词
  forced_selection: true  #四码时必须选重
  single_selection: false #只在全码时选重
  lower_case: true        #多字词可用sssb输入
  enable_encoder: true    #启用造词编码器
  stop_change: false      #停止造词和调频
  delete_threshold: 2000  #自动废词清理阈值
  max_phrase_length: 5    #自动造词最大长度
  disable_user_dict_for_patterns:
    - "[bpmfdtnlgkhjqxzcsrywv]{2}[0-9']?"
    - "[bpmfdtnlgkhjqxzcsrywv][aeuio]?[0-9;']?"
    - "[bpmfdtnlgkhjqxzcsrywv][0-9;'][aeuio]*"
    - "[bpmfdtnlgkhjqxzcsrywv][a-z][bpmfdtnlgkhjqxzcsrywv]"
    - "[bpmfdtnlgkhjqxzcsrywv][a-z][aeuio]{1,2}'"

extended:
  dictionary: sbjm.extended
  user_dictionary: "sbjm"
  enable_user_dict: true

punctuator:
  import_preset: sbxlm

recognizer:
  import_preset: sbxlm
  patterns:
    sbfc: ''

sbjm_extra_bindings:
  __append:
    - match: "[bpmfdtnlgkhjqxzcsrywv]{2}"
      accept: Tab
      send_sequence: "0"
    - match: "[bpmfdtnlgkhjqxzcsrywv]{2}"
      accept: "'"
      send_sequence: "1"
    - match: "[bpmfdtnlgkhjqxzcsrywv]{3}"
      accept: Tab
      send_sequence: "{Home}{Right}{Right}{space}{space}"
    - match: "[bpmfdtnlgkhjqxzcsrywv]{3}"
      accept: "'"
      send_sequence: "{Right}{Right}{space}{Right}{Right}{space}{space}"
    - match: "[bpmfdtnlgkhjqxzcsrywv]{4}"
      accept: "'"
      send_sequence: "{Right}{Right}{Right}{space}{Right}{Right}{space}{space}"

key_binder:
  bindings:
    __patch: 
      - sbxlm.yaml:/rime_key_bindings
      - sbxlm.yaml:/sbxlm_basic_bindings
      - /sbjm_extra_bindings

menu:
  __include: sbxlm.yaml:/prelude/menu
  alternative_select_patterns:
    - "[bpmfdtnlgkhjqxzcsrywv][a-z]{2}[a-zA-Z][aeuio]{2}"
    - "[bpmfdtnlgkhjqxzcsrywv]{2}[aeuio]{2}'"
  select_comment_pattern: "^[a-z]{3}[a-zA-Z].*|[bpmfdtnlgkhjqxzcsrywv][a-z][aeuio]{2}'$"
